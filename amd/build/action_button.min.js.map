{"version":3,"file":"action_button.min.js","sources":["../src/action_button.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/*\n * @package    block_openai_chat\n * @copyright  2023 Bernhard Aichinger-Ganas & Danilo Stoilovski, wunderbyte.at <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport ModalForm from 'core_form/modalform';\n\nconst SELECTORS = {\n  ADDFILESMODALBUTTON: \"#page-blocks-openai_chat-admin a.btn-openmodaladfinetuning\"\n};\n/**\n * Init function.\n */\nexport function init() {\n  // eslint-disable-next-line no-console\n  console.log(\"init\");\n\n  const modalbtn = document.querySelector(SELECTORS.ADDFILESMODALBUTTON);\n\n  if (modalbtn) {\n    modalbtn.addEventListener('click', e => {\n      addFilesModal(e);\n    });\n  }\n}\n\n/**\n *\n * @param {event} e\n */\nfunction addFilesModal(e) {\n\n  const blockid = e.target.dataset.blockid;\n\n  // eslint-disable-next-line no-console\n  console.log(blockid);\n\n  const modalForm = new ModalForm({\n\n    // Name of the class where form is defined (must extend \\core_form\\dynamic_form):\n    formClass: \"block_openai_chat\\\\form\\\\modal_add_files\",\n    // Add as many arguments as you need, they will be passed to the form:\n    args: {\n      \"blockid\": blockid\n    },\n    // Pass any configuration settings to the modal dialogue, for example, the title:\n    modalConfig: {title: 'myform'},\n    // DOM element that should get the focus after the modal dialogue is closed:\n    returnFocus: e.currentTarget\n  });\n  // Listen to events if you want to execute something on form submit.\n  // Event detail will contain everything the process() function returned:\n  modalForm.addEventListener(modalForm.events.FORM_SUBMITTED, (e) => {\n    window.console.log(e.detail);\n\n    // Reload window after cancelling.\n    window.location.reload();\n  });\n\n  // Show the form.\n  modalForm.show();\n}"],"names":["console","log","modalbtn","document","querySelector","SELECTORS","addEventListener","e","blockid","target","dataset","modalForm","ModalForm","formClass","args","modalConfig","title","returnFocus","currentTarget","events","FORM_SUBMITTED","window","detail","location","reload","show","addFilesModal"],"mappings":";;;;;sFA+BEA,QAAQC,IAAI,cAENC,SAAWC,SAASC,cAAcC,+BAEpCH,UACFA,SAASI,iBAAiB,SAASC,cAUhBA,SAEfC,QAAUD,EAAEE,OAAOC,QAAQF,QAGjCR,QAAQC,IAAIO,eAENG,UAAY,IAAIC,mBAAU,CAG9BC,UAAW,2CAEXC,KAAM,SACON,SAGbO,YAAa,CAACC,MAAO,UAErBC,YAAaV,EAAEW,gBAIjBP,UAAUL,iBAAiBK,UAAUQ,OAAOC,gBAAiBb,IAC3Dc,OAAOrB,QAAQC,IAAIM,EAAEe,QAGrBD,OAAOE,SAASC,YAIlBb,UAAUc,OAvCNC,CAAcnB,2EAddF,8BACiB"}